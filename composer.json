{
    "name": "guanguans/coole",
    "description": "Coole is a PHP micro-framework built on open source components. - Coole 是一个基于开源组件构建的 PHP 微框架。",
    "keywords": [
        "php",
        "coole",
        "framework",
        "micro",
        "microframework"
    ],
    "homepage": "https://github.com/guanguans/coole",
    "support": {
        "issues": "https://github.com/guanguans/coole/issues",
        "source": "https://github.com/guanguans/coole"
    },
    "authors": [
        {
            "name": "guanguans",
            "email": "ityaozm@gmail.com",
            "homepage": "https://www.guanguans.cn",
            "role": "developer"
        }
    ],
    "type": "library",
    "license": "MIT",
    "minimum-stability": "dev",
    "prefer-stable": true,
    "require": {
        "php": ">7.2",
        "filp/whoops": "^2.9",
        "guanguans/di": "^1.0",
        "illuminate/database": "^7.30",
        "illuminate/events": "^7.30",
        "illuminate/pagination": "^7.30",
        "monolog/monolog": "^2.1",
        "mpociot/pipeline": "^1.0",
        "nette/robot-loader": "^3.4",
        "nette/utils": "^3.2",
        "opis/closure": "^3.6",
        "php-di/invoker": "^2.3",
        "sebastiaanluca/php-pipe-operator": "^3.0",
        "spatie/async": "^1.5",
        "spatie/blink": "^1.1",
        "spatie/macroable": "^1.0",
        "spatie/once": "^2.2",
        "spatie/url-signer": "^1.2",
        "symfony/cache": "^5.3",
        "symfony/console": "^5.0",
        "symfony/error-handler": "^5.0",
        "symfony/event-dispatcher": "^5.0",
        "symfony/finder": "^5.0",
        "symfony/http-client": "^5.3",
        "symfony/http-foundation": "^5.0",
        "symfony/http-kernel": "^5.0",
        "symfony/mailer": "^5.3",
        "symfony/notifier": "^5.3",
        "symfony/options-resolver": "^5.3",
        "symfony/process": "^5.3",
        "symfony/routing": "^5.0",
        "symfony/serializer": "^5.3",
        "symfony/validator": "^5.3",
        "tightenco/collect": "^8.0",
        "twig/twig": "^3.0",
        "vlucas/phpdotenv": "^5.2"
    },
    "require-dev": {
        "brainmaestro/composer-git-hooks": "^2.7",
        "code-lts/doctum": "^5.4",
        "friendsofphp/php-cs-fixer": "^2.16",
        "mockery/mockery": "^1.2",
        "phpunit/phpunit": "^8.0",
        "vimeo/psalm": "^3.11"
    },
    "autoload": {
        "psr-4": {
            "Guanguans\\Coole\\": "src/Coole"
        },
        "files": [
            "src/Coole/Support/helpers.php"
        ]
    },
    "autoload-dev": {
        "psr-4": {
            "Guanguans\\Coole\\Tests\\": "tests"
        }
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "hooks": {
            "pre-commit": [
                "composer test",
                "composer check-style"
            ],
            "pre-push": [
                "composer test",
                "composer check-style"
            ]
        }
    },
    "funding": [
        {
            "type": "wechat",
            "url": "https://www.guanguans.cn/images/wechat.jpeg"
        }
    ],
    "scripts": {
        "post-update-cmd": [
            "cghooks update"
        ],
        "post-merge": "composer install",
        "post-install-cmd": [
            "cghooks add --ignore-lock",
            "cghooks update"
        ],
        "cghooks": "./vendor/bin/cghooks",
        "check-style": "php-cs-fixer fix --using-cache=no --diff --config=.php_cs.dist --dry-run --ansi",
        "fix-style": "php-cs-fixer fix --using-cache=no --config=.php_cs.dist --ansi",
        "psalm": "./vendor/bin/psalm",
        "test": "./vendor/bin/phpunit --coverage-text --colors=always --verbose",
        "test-coverage": "./vendor/bin/phpunit --coverage-html=coverage/ --coverage-clover=clover.xml --color=always --verbose",
        "doctum": "doctum update doctum.php"
    },
    "scripts-descriptions": {
        "check-style": "Run style checks (only dry run - no fixing!).",
        "fix-style": "Run style checks and fix violations.",
        "psalm": ".Run psalm checks.",
        "test": "Run all tests.",
        "test-coverage": "Run all tests with coverage.",
        "doctum": "Run rarses then renders a project."
    }
}
